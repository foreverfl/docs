{
  "en": {
    "name": "Spring Data",
    "description": "Spring Data’s mission is to provide a familiar and consistent, Spring-based programming model for data access while still retaining the special traits of the underlying data store.\n\nIt makes it easy to use data access technologies, relational and non-relational databases, map-reduce frameworks, and cloud-based data services. This is an umbrella project which contains many subprojects that are specific to a given database. The projects are developed by working together with many of the companies and developers that are behind these exciting technologies.",
    "features": [
      "Powerful repository and custom object-mapping abstractions",
      "Dynamic query derivation from repository method names",
      "Implementation domain base classes providing basic properties",
      "Support for transparent auditing (created, last changed)",
      "Possibility to integrate custom repository code",
      "Easy Spring integration via JavaConfig and custom XML namespaces",
      "Advanced integration with Spring MVC controllers",
      "Experimental support for cross-store persistence"
    ]
  },
  "ko": {
    "name": "스프링 데이터",
    "description": "스프링 데이터의 목표는 친숙하고 일관된 스프링 기반의 프로그래밍 모델을 제공...",
    "features": [
      "강력한 리포지토리 및 사용자 정의 객체 매핑 추상화",
      "리포지토리 메서드 이름에서 동적 쿼리 파생",
      "기본 속성을 제공하는 도메인 기본 클래스 구현",
      "투명한 감사 지원 (생성 및 최종 수정)",
      "사용자 정의 리포지토리 코드 통합 가능",
      "JavaConfig 및 사용자 정의 XML 네임스페이스를 통한 쉬운 Spring 통합",
      "Spring MVC 컨트롤러와의 고급 통합",
      "교차 저장소 영구성에 대한 실험적 지원"
    ]
  },
  "ja": {
    "name": "スプリングデータ",
    "description": "Spring Dataの使命は、馴染みやすく一貫した...",
    "features": [
      "強力なリポジトリとカスタムオブジェクトマッピングの抽象化",
      "リポジトリメソッド名からの動的なクエリ派生",
      "基本的なプロパティを提供するドメインベースのクラス",
      "透明な監査のサポート（作成、最終変更）",
      "カスタムリポジトリコードの統合可能性",
      "JavaConfigおよびカスタムXMLネームスペースを介した簡単なSpring統合",
      "Spring MVCコントローラーとの高度な統合",
      "クロスストアの永続性に対する実験的なサポート"
    ]
  }
}
